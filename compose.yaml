version: "3"
services:
  backend:
    container_name: spin
    build: .
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_HOST: postgres
      POSTGRES_DBNAME: ${POSTGRES_DBNAME}
      SALT_ROUNDS: ${SALT_ROUNDS}
      JWT_KEY: ${JWT_KEY}
      CERBROS_URL: ${CERBROS_URL}
      AZURE_CLIENTID: ${AZURE_CLIENTID},
      AZURE_CLIENTSECRET: ${AZURE_CLIENTSECRET},
      AZURE_TENANTID: ${AZURE_TENANTID},
      AZURE_USERNAME: ${AZURE_USERNAME},
      AZURE_PASSWORD: ${AZURE_PASSWORD},
      AZURE_ONELAKEURL: ${AZURE_ONELAKEURL},
    depends_on:
      - db
      - cerbos
    networks:
      - db
    ports:
      - "3000:3000"
  migration:
    image: migrate/migrate
    networks:
      - db
    volumes:
      - ./migrations:/migrations
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DBNAME: ${POSTGRES_DBNAME}
    command:
      [
        "-path",
        "/migrations",
        "-database",
        "postgres://$POSTGRES_USER:$POSTGRES_PASSWORD@postgres:5432/$POSTGRES_DBNAME?sslmode=disable",
        "up"
      ]
    links:
      - db
  db:
    container_name: postgres
    image: postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      PGDATA: /data/postgres
      POSTGRES_DB: spin
    volumes:
      - db:/data/postgres
    networks:
      - db
  cerbos:
    container_name: cerbros
    image: ghcr.io/cerbos/cerbos:0.40.0
    ports:
      - "3592:3592"
    volumes:
      - ./policies:/policies
    networks:
      - db
networks:
  db:
    driver: bridge
volumes:
  db:
